# PATH
if [[ -z $XDG_CONFIG_HOME ]]; then
  export XDG_CONFIG_HOME="$HOME/.config"
fi
if [[ -z $XDG_DATA_HOME ]]; then
  export XDG_DATA_HOME="$HOME/.local/share"
fi
if [[ -z $XDG_CACHE_HOME ]]; then
  export XDG_CACHE_HOME="$HOME/.cache"
fi
PATH="$HOME/.local/bin:$PATH"

# tmux
if [[ -z $TMUX && $TERM_PROGRAM != vscode ]]; then
  if ! tmux has-session -t "$USER" >&/dev/null; then
    tmux new -s "$USER"
  elif [[ -z $(tmux list-clients -t "$USER" 2>/dev/null) ]]; then
    tmux attach -t "$USER"; exit
  fi
fi

# Oh-My-ZSH!
export ZSH="$XDG_DATA_HOME/oh-my-zsh"
ZSH_CUSTOM="$ZSH/custom"

# Preferences
ZSH_THEME='powerlevel10k/powerlevel10k'
COMPLETION_WAITING_DOTS='true'
ENABLE_CORRECTION='true'

# Custom Plugins
if [[ ! -d $ZSH_CUSTOM/plugins/autoupdate ]]; then
  git clone https://github.com/TamCore/autoupdate-oh-my-zsh-plugins "$ZSH_CUSTOM/plugins/autoupdate"
fi
if [[ ! -d $ZSH_CUSTOM/themes/powerlevel10k ]]; then
  git clone https://github.com/romkatv/powerlevel10k "$ZSH_CUSTOM/themes/powerlevel10k"
fi
if [[ ! -d $ZSH_CUSTOM/plugins/zsh-autosuggestions ]]; then
  git clone https://github.com/zsh-users/zsh-autosuggestions "$ZSH_CUSTOM/plugins/zsh-autosuggestions"
fi
if [[ ! -d $ZSH_CUSTOM/plugins/zsh-history-substring-search ]]; then
  git clone https://github.com/zsh-users/zsh-history-substring-search "$ZSH_CUSTOM/plugins/zsh-history-substring-search"
fi
if [[ ! -d $ZSH_CUSTOM/plugins/zsh-syntax-highlighting ]]; then
  git clone https://github.com/zsh-users/zsh-syntax-highlighting "$ZSH_CUSTOM/plugins/zsh-syntax-highlighting"
fi

# Plugins
plugins=(
  autoupdate
  common-aliases
  direnv
  fzf
  gcloud
  gitignore
  pyenv
  ssh-agent
  z
  zsh_reload
  zsh-autosuggestions
  zsh-syntax-highlighting
  zsh-history-substring-search
)

source "$ZSH/oh-my-zsh.sh"
source "$HOME/.p10k.zsh"

# Editor
export EDITOR=nvim
export VISUAL=nvim

# command-not-found
if [[ -x /usr/lib/command-not-found ]]; then
  function command_not_found_handler {
    /usr/lib/command-not-found -- "$1" && :
  }
fi

# fzf
export FZF_CTRL_T_COMMAND='fdfind -t f -t d -L -H . $dir'
export FZF_ALT_C_COMMAND='fdfind -t d -L . $dir'

# zsh-history-substring-search
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
if [[ "$terminfo[kcuu1]" != '' ]]; then
  bindkey "$terminfo[kcuu1]" history-substring-search-up
  bindkey "$terminfo[kcud1]" history-substring-search-down
fi

# vi: ft=zsh
